{"ast":null,"code":"import _slicedToArray from \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEMultiStepForm/TEMultiStepForm.js\";\n//\n//TE Version 0.3.0\n//\n//\n// NOTES:\n//\n// 10-11-18 SC\n// - May be able to be improved by moving to a render prop form but seems fine for now.\n// - Could also improve by adding react-transition-group around each step\n//\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, StepContainer, StepBar, StepWrapper, StepNumber, StepTitle, Form, ButtonContainer, StepButton } from './styledComponents';\n\nvar TEMultiStepForm = function TEMultiStepForm(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentStep = _useState2[0],\n      setCurrentStep = _useState2[1];\n\n  var updateAndEmitStep = function updateAndEmitStep(step) {\n    var onStepChange = props.onStepChange;\n    setCurrentStep(step);\n\n    if (onStepChange) {\n      onStepChange(step);\n    }\n  };\n\n  var handlePreviousPressed = function handlePreviousPressed() {\n    var handleCancelOnClick = props.handleCancelOnClick,\n        stepData = props.stepData;\n\n    var moveBack = function moveBack() {\n      if (currentStep === 0) {\n        if (handleCancelOnClick) {\n          handleCancelOnClick();\n        }\n      } else {\n        updateAndEmitStep(currentStep - 1);\n      }\n    };\n\n    if (stepData && stepData[currentStep] && stepData[currentStep].onPrevious) {\n      stepData[currentStep].onPrevious().then(function () {\n        return moveBack();\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    } else {\n      moveBack();\n    }\n  };\n\n  var handleNextPressed = function handleNextPressed() {\n    var onSubmit = props.onSubmit,\n        stepData = props.stepData;\n\n    var moveForward = function moveForward() {\n      if (currentStep + 1 === stepData.length) {\n        onSubmit().then(function () {\n          updateAndEmitStep(0);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      } else {\n        updateAndEmitStep(currentStep + 1);\n      }\n    };\n\n    if (stepData && stepData[currentStep] && stepData[currentStep].onNext) {\n      stepData[currentStep].onNext().then(function () {\n        return moveForward();\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    } else {\n      moveForward();\n    }\n  };\n\n  var className = props.className,\n      handleCancelOnClick = props.handleCancelOnClick,\n      stepData = props.stepData,\n      roundedButtons = props.roundedButtons;\n\n  if (!stepData || stepData && stepData.length === 0) {\n    return null;\n  }\n\n  return React.createElement(Container, {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(StepContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(StepBar, {\n    stepCount: stepData.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), stepData.map(function (step, index) {\n    var title = step.title;\n    return React.createElement(StepWrapper, {\n      key: index,\n      stepCount: stepData.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(StepNumber, {\n      active: currentStep === index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, index + 1), React.createElement(StepTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, title));\n  })), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, stepData[currentStep] && stepData[currentStep].component), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, (handleCancelOnClick || currentStep > 0) && React.createElement(StepButton, {\n    onClick: handlePreviousPressed,\n    position: \"left\",\n    rounded: roundedButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, currentStep === 0 ? 'cancel' : 'previous'), React.createElement(StepButton, {\n    onClick: handleNextPressed,\n    position: \"right\",\n    rounded: roundedButtons,\n    singleButton: !handleCancelOnClick && currentStep === 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, currentStep + 1 === stepData.length ? 'submit' : 'next')));\n};\n\nTEMultiStepForm.propTypes = {\n  onStepChange: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n  stepData: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    component: PropTypes.element,\n    onPrevious: PropTypes.func,\n    onNext: PropTypes.func\n  }).isRequired).isRequired,\n  roundedButtons: PropTypes.bool\n};\nTEMultiStepForm.defaultProps = {};\nexport default TEMultiStepForm;","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEMultiStepForm/TEMultiStepForm.js"],"names":["React","useState","PropTypes","Container","StepContainer","StepBar","StepWrapper","StepNumber","StepTitle","Form","ButtonContainer","StepButton","TEMultiStepForm","props","currentStep","setCurrentStep","updateAndEmitStep","step","onStepChange","handlePreviousPressed","handleCancelOnClick","stepData","moveBack","onPrevious","then","catch","error","console","log","handleNextPressed","onSubmit","moveForward","length","onNext","className","roundedButtons","map","index","title","component","propTypes","func","isRequired","arrayOf","shape","string","element","bool","defaultProps"],"mappings":"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","sourcesContent":["//\n//TE Version 0.3.0\n//\n\n//\n// NOTES:\n//\n// 10-11-18 SC\n// - May be able to be improved by moving to a render prop form but seems fine for now.\n// - Could also improve by adding react-transition-group around each step\n//\n\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n    Container,\n    StepContainer,\n    StepBar,\n    StepWrapper,\n    StepNumber,\n    StepTitle,\n    Form,\n    ButtonContainer,\n    StepButton,\n} from './styledComponents'\n\nconst TEMultiStepForm = (props) => {\n    const [currentStep, setCurrentStep] = useState(0)\n\n    const updateAndEmitStep = (step) => {\n        const { onStepChange } = props\n        setCurrentStep(step)\n        if (onStepChange) {\n            onStepChange(step)\n        }\n    }\n    const handlePreviousPressed = () => {\n        const { handleCancelOnClick, stepData } = props\n\n        const moveBack = () => {\n            if (currentStep === 0) {\n                if (handleCancelOnClick) {\n                    handleCancelOnClick()\n                }\n            } else {\n                updateAndEmitStep(currentStep - 1)\n            }\n        }\n\n        if (stepData && stepData[currentStep] && stepData[currentStep].onPrevious) {\n            stepData[currentStep]\n                .onPrevious()\n                .then(() => moveBack())\n                .catch((error) => console.log(error))\n        } else {\n            moveBack()\n        }\n    }\n    const handleNextPressed = () => {\n        const { onSubmit, stepData } = props\n\n        const moveForward = () => {\n            if (currentStep + 1 === stepData.length) {\n                onSubmit()\n                    .then(() => {\n                        updateAndEmitStep(0)\n                    })\n                    .catch((error) => console.log(error))\n            } else {\n                updateAndEmitStep(currentStep + 1)\n            }\n        }\n\n        if (stepData && stepData[currentStep] && stepData[currentStep].onNext) {\n            stepData[currentStep]\n                .onNext()\n                .then(() => moveForward())\n                .catch((error) => console.log(error))\n        } else {\n            moveForward()\n        }\n    }\n\n    const { className, handleCancelOnClick, stepData, roundedButtons } = props\n    if (!stepData || (stepData && stepData.length === 0)) {\n        return null\n    }\n\n    return (\n        <Container className={className}>\n            <StepContainer>\n                <StepBar stepCount={stepData.length} />\n                {stepData.map((step, index) => {\n                    const { title } = step\n\n                    return (\n                        <StepWrapper key={index} stepCount={stepData.length}>\n                            <StepNumber active={currentStep === index}>{index + 1}</StepNumber>\n                            <StepTitle>{title}</StepTitle>\n                        </StepWrapper>\n                    )\n                })}\n            </StepContainer>\n            <Form>{stepData[currentStep] && stepData[currentStep].component}</Form>\n            <ButtonContainer>\n                {(handleCancelOnClick || currentStep > 0) && (\n                    <StepButton\n                        onClick={handlePreviousPressed}\n                        position=\"left\"\n                        rounded={roundedButtons}\n                    >\n                        {currentStep === 0 ? 'cancel' : 'previous'}\n                    </StepButton>\n                )}\n                <StepButton\n                    onClick={handleNextPressed}\n                    position=\"right\"\n                    rounded={roundedButtons}\n                    singleButton={!handleCancelOnClick && currentStep === 0}\n                >\n                    {currentStep + 1 === stepData.length ? 'submit' : 'next'}\n                </StepButton>\n            </ButtonContainer>\n        </Container>\n    )\n}\n\nTEMultiStepForm.propTypes = {\n    onStepChange: PropTypes.func,\n    onSubmit: PropTypes.func.isRequired,\n    stepData: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            component: PropTypes.element,\n            onPrevious: PropTypes.func,\n            onNext: PropTypes.func,\n        }).isRequired\n    ).isRequired,\n    roundedButtons: PropTypes.bool,\n}\n\nTEMultiStepForm.defaultProps = {}\n\nexport default TEMultiStepForm\n"]},"metadata":{},"sourceType":"module"}