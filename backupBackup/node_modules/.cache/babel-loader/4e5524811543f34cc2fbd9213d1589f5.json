{"ast":null,"code":"import _objectSpread from \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEImageRow/TEImageRow.js\";\n//\n//TE Version 0.3.0\n//\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TERow from './../TERow';\nimport TELabel from './../TELabel';\nimport EditorPopup from './EditorPopup';\nimport { ImageRowWrapper, ImageWrapper, Image, ClearImageButton, ClearImageButtonIcon, Label, UploadIcon, Input, ErrorMessage } from './styledComponents';\n\nvar TEImageRow = function TEImageRow(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editorVisible = _useState2[0],\n      setEditorVisible = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      file = _useState4[0],\n      setFile = _useState4[1];\n\n  var _useState5 = useState({\n    error: false,\n    message: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorData = _useState6[0],\n      setErrorData = _useState6[1];\n\n  var _useState7 = useState(props.resetKey || 'inputKey'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputKey = _useState8[0],\n      setInputKey = _useState8[1];\n\n  var handleClearImage = function handleClearImage(data) {\n    props.onRemove(data);\n  };\n\n  var handleCancelEditor = function handleCancelEditor() {\n    setErrorData({\n      error: false,\n      message: ''\n    });\n    setFile(undefined);\n    setInputKey(new Date().getTime());\n  };\n\n  var handleEditorSubmit = function handleEditorSubmit(editor) {\n    //TODO: Test if loading this from above will cause errors\n    // const { file } = this.state\n    var onUpload = props.onUpload;\n    var data = {\n      file: file,\n      editor: editor\n    };\n    onUpload(data).then(function () {\n      setEditorVisible(false);\n      setErrorData({\n        error: false,\n        message: ''\n      });\n      setFile(undefined);\n      setInputKey(new Date().getTime());\n    }).catch(function (error) {\n      console.log(error);\n      setEditorVisible(false);\n      setErrorData({\n        error: false,\n        message: ''\n      });\n      setFile(undefined);\n      setInputKey(new Date().getTime());\n    });\n  };\n\n  var onFileChange = function onFileChange(e) {\n    var pattern = props.pattern;\n    var files = e.target.files;\n\n    if (!files) {\n      console.error('No file provided to input.');\n      return;\n    }\n\n    var file = files[0]; //Validate Files\n\n    if (pattern && pattern instanceof RegExp) {\n      if (!file.type.match(pattern)) {\n        console.warn('The selected file is not an image.');\n        setErrorData({\n          error: true,\n          message: 'The selected file is not an image.'\n        });\n        setInputKey(new Date().getTime());\n        return;\n      }\n    }\n\n    setErrorData({\n      error: false,\n      message: ''\n    });\n    setFile(file);\n    setEditorVisible(true);\n  };\n\n  var className = props.className,\n      size = props.size,\n      last = props.last,\n      title = props.title,\n      imgSrc = props.imgSrc,\n      maxNumber = props.maxNumber,\n      accept = props.accept,\n      disabled = props.disabled,\n      required = props.required,\n      labelForKey = props.labelForKey;\n  var imgSrcArray = [];\n\n  if (imgSrc) {\n    for (var uid in imgSrc) {\n      imgSrcArray.push(_objectSpread({}, imgSrc[uid], {\n        uid: uid\n      }));\n    }\n  }\n\n  var labelText = title;\n\n  if (maxNumber > 1 && imgSrcArray) {\n    labelText = \"\".concat(title, \" (\").concat(imgSrcArray.length, \"/\").concat(maxNumber, \")\");\n  }\n\n  return React.createElement(TERow, {\n    size: size,\n    last: last,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(TELabel, {\n    htmlFor: labelForKey,\n    required: required,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, labelText), React.createElement(ImageRowWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, imgSrcArray && imgSrcArray.map(function (imgSrcData) {\n    var src = imgSrcData.src,\n        uid = imgSrcData.uid,\n        path = imgSrcData.path;\n    return React.createElement(ImageWrapper, {\n      key: uid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: src,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: src,\n      alt: uid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(ClearImageButton, {\n      onClick: function onClick() {\n        return handleClearImage({\n          uid: uid,\n          path: path\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(ClearImageButtonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })));\n  }), (!imgSrcArray || imgSrcArray && imgSrcArray.length < maxNumber) && !disabled && React.createElement(Label, {\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(UploadIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(Input, {\n    key: inputKey //Used to reset input\n    ,\n    type: \"file\",\n    accept: accept,\n    onChange: onFileChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))), errorData && errorData.error && React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, errorData.message), React.createElement(EditorPopup, {\n    visible: editorVisible,\n    file: file,\n    onCancel: handleCancelEditor,\n    onSubmit: handleEditorSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }));\n};\n\nTEImageRow.propTypes = {\n  //Row\n  size: PropTypes.string,\n  last: PropTypes.bool,\n  //Input\n  onUpload: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  accept: PropTypes.string,\n  // accept: PropTypes.Regexp, //Don't know protype for regex\n  maxNumber: PropTypes.number,\n  onChangeKey: PropTypes.string,\n  disabled: PropTypes.bool,\n  //Both\n  labelForKey: PropTypes.string\n};\nTEImageRow.defaultProps = {\n  accept: 'image/*',\n  pattern: /image-*/,\n  maxNumber: 1\n};\nexport default TEImageRow;","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEImageRow/TEImageRow.js"],"names":["React","useState","PropTypes","TERow","TELabel","EditorPopup","ImageRowWrapper","ImageWrapper","Image","ClearImageButton","ClearImageButtonIcon","Label","UploadIcon","Input","ErrorMessage","TEImageRow","props","editorVisible","setEditorVisible","undefined","file","setFile","error","message","errorData","setErrorData","resetKey","inputKey","setInputKey","handleClearImage","data","onRemove","handleCancelEditor","Date","getTime","handleEditorSubmit","editor","onUpload","then","catch","console","log","onFileChange","e","pattern","files","target","RegExp","type","match","warn","className","size","last","title","imgSrc","maxNumber","accept","disabled","required","labelForKey","imgSrcArray","uid","push","labelText","length","map","imgSrcData","src","path","propTypes","string","bool","func","isRequired","number","onChangeKey","defaultProps"],"mappings":"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","sourcesContent":["//\n//TE Version 0.3.0\n//\n\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport TERow from './../TERow'\nimport TELabel from './../TELabel'\nimport EditorPopup from './EditorPopup'\n\nimport {\n    ImageRowWrapper,\n    ImageWrapper,\n    Image,\n    ClearImageButton,\n    ClearImageButtonIcon,\n    Label,\n    UploadIcon,\n    Input,\n    ErrorMessage,\n} from './styledComponents'\n\nconst TEImageRow = (props) => {\n    const [editorVisible, setEditorVisible] = useState(false)\n    const [file, setFile] = useState(undefined)\n    const [errorData, setErrorData] = useState({ error: false, message: '' })\n    const [inputKey, setInputKey] = useState(props.resetKey || 'inputKey')\n\n    const handleClearImage = (data) => {\n        props.onRemove(data)\n    }\n    const handleCancelEditor = () => {\n        setErrorData({ error: false, message: '' })\n        setFile(undefined)\n        setInputKey(new Date().getTime())\n    }\n    const handleEditorSubmit = (editor) => {\n        //TODO: Test if loading this from above will cause errors\n        // const { file } = this.state\n        const { onUpload } = props\n\n        const data = { file, editor }\n        onUpload(data)\n            .then(() => {\n                setEditorVisible(false)\n                setErrorData({ error: false, message: '' })\n                setFile(undefined)\n                setInputKey(new Date().getTime())\n            })\n            .catch((error) => {\n                console.log(error)\n                setEditorVisible(false)\n                setErrorData({ error: false, message: '' })\n                setFile(undefined)\n                setInputKey(new Date().getTime())\n            })\n    }\n\n    const onFileChange = (e) => {\n        const { pattern } = props\n        const { files } = e.target\n\n        if (!files) {\n            console.error('No file provided to input.')\n            return\n        }\n\n        const file = files[0]\n\n        //Validate Files\n        if (pattern && pattern instanceof RegExp) {\n            if (!file.type.match(pattern)) {\n                console.warn('The selected file is not an image.')\n                setErrorData({ error: true, message: 'The selected file is not an image.' })\n                setInputKey(new Date().getTime())\n                return\n            }\n        }\n\n        setErrorData({ error: false, message: '' })\n        setFile(file)\n        setEditorVisible(true)\n    }\n\n    const {\n        //Row\n        className,\n        size,\n        last,\n\n        //Label\n        title,\n\n        //Input\n        imgSrc,\n        maxNumber,\n        accept,\n        disabled,\n\n        //Both\n        required,\n        labelForKey,\n    } = props\n\n    const imgSrcArray = []\n    if (imgSrc) {\n        for (const uid in imgSrc) {\n            imgSrcArray.push({ ...imgSrc[uid], uid })\n        }\n    }\n\n    let labelText = title\n    if (maxNumber > 1 && imgSrcArray) {\n        labelText = `${title} (${imgSrcArray.length}/${maxNumber})`\n    }\n\n    return (\n        <TERow size={size} last={last} className={className}>\n            <TELabel htmlFor={labelForKey} required={required} disabled={disabled}>\n                {labelText}\n            </TELabel>\n            <ImageRowWrapper>\n                {imgSrcArray &&\n                    imgSrcArray.map((imgSrcData) => {\n                        const { src, uid, path } = imgSrcData\n                        return (\n                            <ImageWrapper key={uid}>\n                                <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <Image src={src} alt={uid} />\n                                </a>\n                                <ClearImageButton onClick={() => handleClearImage({ uid, path })}>\n                                    <ClearImageButtonIcon />\n                                </ClearImageButton>\n                            </ImageWrapper>\n                        )\n                    })}\n                {(!imgSrcArray || (imgSrcArray && imgSrcArray.length < maxNumber)) && !disabled && (\n                    <Label disabled={disabled}>\n                        <div>\n                            <UploadIcon />\n                        </div>\n                        <Input\n                            key={inputKey} //Used to reset input\n                            type=\"file\"\n                            accept={accept}\n                            onChange={onFileChange}\n                        />\n                    </Label>\n                )}\n            </ImageRowWrapper>\n            {errorData && errorData.error && <ErrorMessage>{errorData.message}</ErrorMessage>}\n            <EditorPopup\n                visible={editorVisible}\n                file={file}\n                onCancel={handleCancelEditor}\n                onSubmit={handleEditorSubmit}\n            />\n        </TERow>\n    )\n}\n\nTEImageRow.propTypes = {\n    //Row\n    size: PropTypes.string,\n    last: PropTypes.bool,\n\n    //Input\n    onUpload: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    accept: PropTypes.string,\n    // accept: PropTypes.Regexp, //Don't know protype for regex\n    maxNumber: PropTypes.number,\n    onChangeKey: PropTypes.string,\n    disabled: PropTypes.bool,\n\n    //Both\n    labelForKey: PropTypes.string,\n}\n\nTEImageRow.defaultProps = {\n    accept: 'image/*',\n    pattern: /image-*/,\n    maxNumber: 1,\n}\n\nexport default TEImageRow\n"]},"metadata":{},"sourceType":"module"}