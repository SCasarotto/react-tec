{"ast":null,"code":"import _objectWithoutProperties from \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEInputRow/TEInputRow.js\";\n//\n//TE Version 0.3.0\n//\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TERow from './../TERow';\nimport TELabel from './../TELabel';\nimport TEInput from './../TEInput';\nimport TETextarea from './../TETextarea';\n\nvar TEInputRow = function TEInputRow(props) {\n  var size = props.size,\n      last = props.last,\n      title = props.title,\n      type = props.type,\n      onChange = props.onChange,\n      disabled = props.disabled,\n      value = props.value,\n      required = props.required,\n      labelForKey = props.labelForKey,\n      rest = _objectWithoutProperties(props, [\"size\", \"last\", \"title\", \"type\", \"onChange\", \"disabled\", \"value\", \"required\", \"labelForKey\"]);\n\n  return React.createElement(TERow, {\n    size: size,\n    last: last,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(TELabel, {\n    htmlFor: labelForKey,\n    required: required,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, title), type !== 'textarea' ? React.createElement(TEInput, Object.assign({\n    type: type,\n    value: value,\n    onChange: onChange,\n    id: labelForKey,\n    disabled: disabled\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })) : React.createElement(TETextarea, Object.assign({\n    value: value,\n    onChange: onChange,\n    id: labelForKey,\n    disabled: disabled\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n};\n\nTEInputRow.propTypes = {\n  //Row\n  rowStyles: PropTypes.object,\n  size: PropTypes.string,\n  last: PropTypes.bool,\n  //Input\n  inputStyles: PropTypes.object,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  onChangeKey: PropTypes.string,\n  disabled: PropTypes.bool,\n  //Both\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  labelForKey: PropTypes.string\n};\nexport default TEInputRow;","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEInputRow/TEInputRow.js"],"names":["React","PropTypes","TERow","TELabel","TEInput","TETextarea","TEInputRow","props","size","last","title","type","onChange","disabled","value","required","labelForKey","rest","propTypes","rowStyles","object","string","bool","inputStyles","func","onChangeKey","oneOfType","number"],"mappings":";;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,MAGtBC,IAHsB,GAoBtBD,KApBsB,CAGtBC,IAHsB;AAAA,MAItBC,IAJsB,GAoBtBF,KApBsB,CAItBE,IAJsB;AAAA,MAOtBC,KAPsB,GAoBtBH,KApBsB,CAOtBG,KAPsB;AAAA,MAUtBC,IAVsB,GAoBtBJ,KApBsB,CAUtBI,IAVsB;AAAA,MAWtBC,QAXsB,GAoBtBL,KApBsB,CAWtBK,QAXsB;AAAA,MAYtBC,QAZsB,GAoBtBN,KApBsB,CAYtBM,QAZsB;AAAA,MAatBC,KAbsB,GAoBtBP,KApBsB,CAatBO,KAbsB;AAAA,MAgBtBC,QAhBsB,GAoBtBR,KApBsB,CAgBtBQ,QAhBsB;AAAA,MAiBtBC,WAjBsB,GAoBtBT,KApBsB,CAiBtBS,WAjBsB;AAAA,MAmBnBC,IAnBmB,4BAoBtBV,KApBsB;;AAsB1B,SACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEC,IAAb;AAAmB,IAAA,IAAI,EAAEC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEO,WAAlB;AAA+B,IAAA,QAAQ,EAAED,QAAzC;AAAmD,IAAA,QAAQ,EAAEF,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KADL,CADJ,EAIKC,IAAI,KAAK,UAAT,GACG,oBAAC,OAAD;AACI,IAAA,IAAI,EAAEA,IADV;AAEI,IAAA,KAAK,EAAEG,KAFX;AAGI,IAAA,QAAQ,EAAEF,QAHd;AAII,IAAA,EAAE,EAAEI,WAJR;AAKI,IAAA,QAAQ,EAAEH;AALd,KAMQI,IANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH,GAUG,oBAAC,UAAD;AACI,IAAA,KAAK,EAAEH,KADX;AAEI,IAAA,QAAQ,EAAEF,QAFd;AAGI,IAAA,EAAE,EAAEI,WAHR;AAII,IAAA,QAAQ,EAAEH;AAJd,KAKQI,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdR,CADJ;AAyBH,CA/CD;;AAiDAX,UAAU,CAACY,SAAX,GAAuB;AACnB;AACAC,EAAAA,SAAS,EAAElB,SAAS,CAACmB,MAFF;AAGnBZ,EAAAA,IAAI,EAAEP,SAAS,CAACoB,MAHG;AAInBZ,EAAAA,IAAI,EAAER,SAAS,CAACqB,IAJG;AAMnB;AACAC,EAAAA,WAAW,EAAEtB,SAAS,CAACmB,MAPJ;AAQnBT,EAAAA,IAAI,EAAEV,SAAS,CAACoB,MARG;AASnBT,EAAAA,QAAQ,EAAEX,SAAS,CAACuB,IATD;AAUnBC,EAAAA,WAAW,EAAExB,SAAS,CAACoB,MAVJ;AAWnBR,EAAAA,QAAQ,EAAEZ,SAAS,CAACqB,IAXD;AAanB;AACAR,EAAAA,KAAK,EAAEb,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAACoB,MAAX,EAAmBpB,SAAS,CAAC0B,MAA7B,CAApB,CAdY;AAenBX,EAAAA,WAAW,EAAEf,SAAS,CAACoB;AAfJ,CAAvB;AAkBA,eAAef,UAAf","sourcesContent":["//\n//TE Version 0.3.0\n//\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport TERow from './../TERow'\nimport TELabel from './../TELabel'\nimport TEInput from './../TEInput'\nimport TETextarea from './../TETextarea'\n\nconst TEInputRow = (props) => {\n    const {\n        //Row\n        size,\n        last,\n\n        //Label\n        title,\n\n        //Input\n        type,\n        onChange,\n        disabled,\n        value,\n\n        //Both\n        required,\n        labelForKey,\n\n        ...rest\n    } = props\n\n    return (\n        <TERow size={size} last={last}>\n            <TELabel htmlFor={labelForKey} required={required} disabled={disabled}>\n                {title}\n            </TELabel>\n            {type !== 'textarea' ? (\n                <TEInput\n                    type={type}\n                    value={value}\n                    onChange={onChange}\n                    id={labelForKey}\n                    disabled={disabled}\n                    {...rest}\n                />\n            ) : (\n                <TETextarea\n                    value={value}\n                    onChange={onChange}\n                    id={labelForKey}\n                    disabled={disabled}\n                    {...rest}\n                />\n            )}\n        </TERow>\n    )\n}\n\nTEInputRow.propTypes = {\n    //Row\n    rowStyles: PropTypes.object,\n    size: PropTypes.string,\n    last: PropTypes.bool,\n\n    //Input\n    inputStyles: PropTypes.object,\n    type: PropTypes.string,\n    onChange: PropTypes.func,\n    onChangeKey: PropTypes.string,\n    disabled: PropTypes.bool,\n\n    //Both\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    labelForKey: PropTypes.string,\n}\n\nexport default TEInputRow\n"]},"metadata":{},"sourceType":"module"}