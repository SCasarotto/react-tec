{"ast":null,"code":"import _slicedToArray from \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEImageRow/EditorPopup/EditorPopup.js\";\n//\n//Version 0.3.0\n//\nimport React, { useState, useRef } from 'react'; //import PropTypes from 'prop-types'\n\nimport AvatarEditor from 'react-avatar-editor';\nimport TEPopupForm from './../../../Popup/TEPopupForm';\nimport TELabel from './../../TELabel';\nimport { Container, Row, RotateButtonWrapper, RotateButton, UndoRotationIcon, RedoRotationIcon } from './styledComponents';\n\nvar TEImageUpload = function TEImageUpload(props) {\n  var _useState = useState(1.1),\n      _useState2 = _slicedToArray(_useState, 2),\n      editorScale = _useState2[0],\n      setEditorScale = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rotation = _useState4[0],\n      setRotation = _useState4[1];\n\n  var editor = useRef(null);\n  var visible = props.visible,\n      file = props.file,\n      onCancel = props.onCancel,\n      _onSubmit = props.onSubmit,\n      onSubmitTitle = props.onSubmitTitle;\n  return React.createElement(TEPopupForm, {\n    visible: visible,\n    onSubmit: function onSubmit() {\n      return _onSubmit(editor.current);\n    },\n    onClose: onCancel,\n    onCancelTitle: \"Cancel\",\n    onSubmitTitle: onSubmitTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(AvatarEditor, {\n    ref: editor,\n    image: file,\n    width: 300,\n    height: 300,\n    border: 20 // borderRadius={editorRadius}\n    ,\n    color: [255, 255, 255, 0.6] // RGBA\n    ,\n    scale: editorScale,\n    rotate: rotation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TELabel, {\n    htmlFor: \"scale\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Zoom\"), React.createElement(\"input\", {\n    name: \"scale\",\n    id: \"scale\",\n    type: \"range\",\n    onChange: function onChange(e) {\n      return setEditorScale(Number(e.target.value));\n    },\n    min: \"0.5\",\n    max: \"2.5\",\n    step: \"0.01\",\n    value: editorScale,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TELabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Rotate\"), React.createElement(RotateButtonWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(RotateButton, {\n    onClick: function onClick() {\n      return setRotation(rotation + 90);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(UndoRotationIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(RotateButton, {\n    onClick: function onClick() {\n      return setRotation(rotation - 90);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(RedoRotationIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))))));\n};\n\nTEImageUpload.propTypes = {};\nTEImageUpload.defaultProps = {\n  onSubmitTitle: 'Submit'\n};\nexport default TEImageUpload;","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEImageRow/EditorPopup/EditorPopup.js"],"names":["React","useState","useRef","AvatarEditor","TEPopupForm","TELabel","Container","Row","RotateButtonWrapper","RotateButton","UndoRotationIcon","RedoRotationIcon","TEImageUpload","props","editorScale","setEditorScale","rotation","setRotation","editor","visible","file","onCancel","onSubmit","onSubmitTitle","current","e","Number","target","value","propTypes","defaultProps"],"mappings":"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","sourcesContent":["//\n//Version 0.3.0\n//\n\nimport React, { useState, useRef } from 'react'\n//import PropTypes from 'prop-types'\nimport AvatarEditor from 'react-avatar-editor'\n\nimport TEPopupForm from './../../../Popup/TEPopupForm'\nimport TELabel from './../../TELabel'\n\nimport {\n\tContainer,\n\tRow,\n\tRotateButtonWrapper,\n\tRotateButton,\n\tUndoRotationIcon,\n\tRedoRotationIcon,\n} from './styledComponents'\n\nconst TEImageUpload = (props) => {\n\tconst [editorScale, setEditorScale] = useState(1.1)\n\tconst [rotation, setRotation] = useState(0)\n\tconst editor = useRef(null)\n\n\tconst {\n\t\tvisible,\n\t\tfile,\n\n\t\tonCancel,\n\t\tonSubmit,\n\t\tonSubmitTitle,\n\t} = props\n\n\treturn (\n\t\t<TEPopupForm\n\t\t\tvisible={visible}\n\t\t\tonSubmit={() => onSubmit(editor.current)}\n\t\t\tonClose={onCancel}\n\t\t\tonCancelTitle=\"Cancel\"\n\t\t\tonSubmitTitle={onSubmitTitle}\n\t\t>\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<AvatarEditor\n\t\t\t\t\t\tref={editor}\n\t\t\t\t\t\timage={file}\n\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\theight={300}\n\t\t\t\t\t\tborder={20}\n\t\t\t\t\t\t// borderRadius={editorRadius}\n\t\t\t\t\t\tcolor={[255, 255, 255, 0.6]} // RGBA\n\t\t\t\t\t\tscale={editorScale}\n\t\t\t\t\t\trotate={rotation}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<TELabel htmlFor=\"scale\">Zoom</TELabel>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname=\"scale\"\n\t\t\t\t\t\tid=\"scale\"\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tonChange={(e) => setEditorScale(Number(e.target.value))}\n\t\t\t\t\t\tmin=\"0.5\"\n\t\t\t\t\t\tmax=\"2.5\"\n\t\t\t\t\t\tstep=\"0.01\"\n\t\t\t\t\t\tvalue={editorScale}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<TELabel>Rotate</TELabel>\n\t\t\t\t\t<RotateButtonWrapper>\n\t\t\t\t\t\t<RotateButton onClick={() => setRotation(rotation + 90)}>\n\t\t\t\t\t\t\t<UndoRotationIcon />\n\t\t\t\t\t\t</RotateButton>\n\t\t\t\t\t\t<RotateButton onClick={() => setRotation(rotation - 90)}>\n\t\t\t\t\t\t\t<RedoRotationIcon />\n\t\t\t\t\t\t</RotateButton>\n\t\t\t\t\t</RotateButtonWrapper>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</TEPopupForm>\n\t)\n}\n\nTEImageUpload.propTypes = {}\n\nTEImageUpload.defaultProps = {\n\tonSubmitTitle: 'Submit',\n}\n\nexport default TEImageUpload\n"]},"metadata":{},"sourceType":"module"}