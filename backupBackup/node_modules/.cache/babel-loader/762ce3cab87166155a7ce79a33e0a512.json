{"ast":null,"code":"import _objectWithoutProperties from \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEFileInput/TEFileInput.js\";\n//\n// Version 0.3.0\n//\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Wrapper, InputWrapper, Label, LabelCopy, LabelIcon, Input, ClearButton, ButtonIcon, ErrorMessage } from './styledComponents';\n\nvar TEFileInput = function TEFileInput(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fileArray = _useState4[0],\n      setFileArray = _useState4[1];\n\n  var _useState5 = useState({\n    error: false,\n    message: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorData = _useState6[0],\n      setErrorData = _useState6[1];\n\n  var _useState7 = useState(props.resetKey || 'inputKey'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputKey = _useState8[0],\n      setInputKey = _useState8[1];\n\n  var onFileChange = function onFileChange(e, droppedFiles) {\n    var pattern = props.pattern,\n        onChange = props.onChange;\n    var files = e.target.files || droppedFiles;\n\n    if (!files) {\n      console.error('No file provided to input.');\n      return;\n    } //Validate Files\n\n\n    if (pattern && pattern instanceof RegExp) {\n      for (var i = 0; i < files.length; i++) {\n        if (!files[i].type.match(pattern)) {\n          console.warn('One of the selected files is not of the correct type.');\n          setErrorData({\n            error: true,\n            message: 'One of the selected files is not of the correct type.'\n          });\n          return;\n        }\n      }\n    }\n\n    setFileArray(files);\n    setErrorData({\n      error: false,\n      message: ''\n    });\n    onChange(files); // const readFile = (file) => {\n    //     const { name } = file\n    //     const reader = new FileReader()\n    //     reader.onload = (e) => {\n    //         const { fileArray } = this.state\n    //         const updateFileArray = [...fileArray, { name, value: reader.result }]\n    //         this.setState({\n    //             fileArray: updateFileArray,\n    //             error: false,\n    //             errorMessage: '',\n    //         })\n    //         onChange(updateFileArray)\n    //     }\n    //     reader.readAsDataURL(file)\n    // }\n    // for (let i = 0; i < files.length; i++) {\n    //     readFile(files[i])\n    // }\n  };\n\n  var onDragEnter = function onDragEnter(e) {\n    return setActive(true);\n  };\n\n  var onDragLeave = function onDragLeave(e) {\n    return setActive(false);\n  };\n\n  var onDragOver = function onDragOver(e) {\n    return e.preventDefault();\n  };\n\n  var onDrop = function onDrop(e) {\n    e.preventDefault();\n    setActive(false);\n    onFileChange(e, e.dataTransfer.files);\n  };\n\n  var handleClearInput = function handleClearInput() {\n    setInputKey(new Date().getTime()); //This will reset the input\n\n    setFileArray([]);\n    setErrorData({\n      error: false,\n      message: ''\n    });\n  };\n\n  var inputRef = props.inputRef,\n      disabled = props.disabled,\n      className = props.className,\n      rest = _objectWithoutProperties(props, [\"inputRef\", \"disabled\", \"className\"]);\n\n  var labelCopy = 'Choose a file...';\n\n  if (fileArray && fileArray.length === 1) {\n    labelCopy = fileArray[0].name;\n  } else if (fileArray && fileArray.length > 1) {\n    labelCopy = \"\".concat(fileArray.length, \" files selected\");\n  }\n\n  return React.createElement(Wrapper, {\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    onDragOver: onDragOver,\n    onDrop: onDrop,\n    active: active,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Label, {\n    active: active,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(LabelCopy, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(LabelIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), labelCopy), React.createElement(Input, Object.assign({}, rest, {\n    disabled: disabled,\n    type: \"file\",\n    key: inputKey,\n    onChange: onFileChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))), React.createElement(ClearButton, {\n    onClick: handleClearInput,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(ButtonIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), errorData && errorData.error && React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, errorData.message));\n};\n\nTEFileInput.propTypes = {\n  style: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n  accept: PropTypes.string,\n  //OS Hint of file type for dialog - NOT safety check of type\n  // pattern: PropTypes.RegExp, //This is the actual strict catch. Regex // Don't know regex proptype\n  id: PropTypes.string,\n  disabled: PropTypes.bool\n};\nexport default TEFileInput;","map":{"version":3,"sources":["/Users/stuartcasarotto/Documents/38thStreetStudios/Work/react-tec/src/lib/Form/TEFileInput/TEFileInput.js"],"names":["React","useState","PropTypes","Wrapper","InputWrapper","Label","LabelCopy","LabelIcon","Input","ClearButton","ButtonIcon","ErrorMessage","TEFileInput","props","active","setActive","fileArray","setFileArray","error","message","errorData","setErrorData","resetKey","inputKey","setInputKey","onFileChange","e","droppedFiles","pattern","onChange","files","target","console","RegExp","i","length","type","match","warn","onDragEnter","onDragLeave","onDragOver","preventDefault","onDrop","dataTransfer","handleClearInput","Date","getTime","inputRef","disabled","className","rest","labelCopy","name","propTypes","style","object","func","isRequired","accept","string","id","bool"],"mappings":"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","sourcesContent":["//\n// Version 0.3.0\n//\n\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n    Wrapper,\n    InputWrapper,\n    Label,\n    LabelCopy,\n    LabelIcon,\n    Input,\n    ClearButton,\n    ButtonIcon,\n    ErrorMessage,\n} from './styledComponents'\n\nconst TEFileInput = (props) => {\n    const [active, setActive] = useState(false)\n    const [fileArray, setFileArray] = useState([])\n    const [errorData, setErrorData] = useState({ error: false, message: '' })\n    const [inputKey, setInputKey] = useState(props.resetKey || 'inputKey')\n\n    const onFileChange = (e, droppedFiles) => {\n        const { pattern, onChange } = props\n        const files = e.target.files || droppedFiles\n\n        if (!files) {\n            console.error('No file provided to input.')\n            return\n        }\n\n        //Validate Files\n        if (pattern && pattern instanceof RegExp) {\n            for (let i = 0; i < files.length; i++) {\n                if (!files[i].type.match(pattern)) {\n                    console.warn('One of the selected files is not of the correct type.')\n                    setErrorData({\n                        error: true,\n                        message: 'One of the selected files is not of the correct type.',\n                    })\n                    return\n                }\n            }\n        }\n\n        setFileArray(files)\n        setErrorData({\n            error: false,\n            message: '',\n        })\n        onChange(files)\n\n        // const readFile = (file) => {\n        //     const { name } = file\n        //     const reader = new FileReader()\n\n        //     reader.onload = (e) => {\n        //         const { fileArray } = this.state\n        //         const updateFileArray = [...fileArray, { name, value: reader.result }]\n        //         this.setState({\n        //             fileArray: updateFileArray,\n        //             error: false,\n        //             errorMessage: '',\n        //         })\n        //         onChange(updateFileArray)\n        //     }\n\n        //     reader.readAsDataURL(file)\n        // }\n\n        // for (let i = 0; i < files.length; i++) {\n        //     readFile(files[i])\n        // }\n    }\n    const onDragEnter = (e) => setActive(true)\n    const onDragLeave = (e) => setActive(false)\n    const onDragOver = (e) => e.preventDefault()\n    const onDrop = (e) => {\n        e.preventDefault()\n        setActive(false)\n        onFileChange(e, e.dataTransfer.files)\n    }\n    const handleClearInput = () => {\n        setInputKey(new Date().getTime()) //This will reset the input\n        setFileArray([])\n        setErrorData({\n            error: false,\n            message: '',\n        })\n    }\n\n    const { inputRef, disabled, className, ...rest } = props\n\n    let labelCopy = 'Choose a file...'\n    if (fileArray && fileArray.length === 1) {\n        labelCopy = fileArray[0].name\n    } else if (fileArray && fileArray.length > 1) {\n        labelCopy = `${fileArray.length} files selected`\n    }\n\n    return (\n        <Wrapper className={className}>\n            <InputWrapper\n                onDragEnter={onDragEnter}\n                onDragLeave={onDragLeave}\n                onDragOver={onDragOver}\n                onDrop={onDrop}\n                active={active}\n                disabled={disabled}\n            >\n                <Label active={active} disabled={disabled}>\n                    <LabelCopy>\n                        <LabelIcon />\n                        {labelCopy}\n                    </LabelCopy>\n                    <Input\n                        {...rest}\n                        disabled={disabled}\n                        type=\"file\"\n                        key={inputKey}\n                        onChange={onFileChange}\n                    />\n                </Label>\n                <ClearButton onClick={handleClearInput} disabled={disabled}>\n                    <ButtonIcon />\n                </ClearButton>\n            </InputWrapper>\n            {errorData && errorData.error && <ErrorMessage>{errorData.message}</ErrorMessage>}\n        </Wrapper>\n    )\n}\n\nTEFileInput.propTypes = {\n    style: PropTypes.object,\n    onChange: PropTypes.func.isRequired,\n    accept: PropTypes.string, //OS Hint of file type for dialog - NOT safety check of type\n    // pattern: PropTypes.RegExp, //This is the actual strict catch. Regex // Don't know regex proptype\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n}\n\nexport default TEFileInput\n"]},"metadata":{},"sourceType":"module"}